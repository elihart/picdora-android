//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations 3.0.
//


package com.picdora;

import android.content.Context;
import android.os.Handler;
import android.os.Looper;
import org.androidannotations.api.BackgroundExecutor;
import org.json.JSONObject;

public final class ImageUpdater_
    extends ImageUpdater
{

    private Context context_;
    private Handler handler_ = new Handler(Looper.getMainLooper());

    private ImageUpdater_(Context context) {
        context_ = context;
        init_();
    }

    public static ImageUpdater_ getInstance_(Context context) {
        return new ImageUpdater_(context);
    }

    private void init_() {
        prefs = new PicdoraPreferences_(context_);
    }

    public void rebind(Context context) {
        context_ = context;
        init_();
    }

    @Override
    public void getNewImageBatch(final int index) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                ImageUpdater_.super.getNewImageBatch(index);
            }

        }
        );
    }

    @Override
    public void getNewImages() {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @Override
            public void execute() {
                try {
                    ImageUpdater_.super.getNewImages();
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    @Override
    public void handleNewImageSuccess(final JSONObject json) {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @Override
            public void execute() {
                try {
                    ImageUpdater_.super.handleNewImageSuccess(json);
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

}
