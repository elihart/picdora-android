package com.picdora.collections;

import se.emilsjolander.sprinkles.Model;
import se.emilsjolander.sprinkles.annotations.AutoIncrementPrimaryKey;
import se.emilsjolander.sprinkles.annotations.CascadeDelete;
import se.emilsjolander.sprinkles.annotations.Column;
import se.emilsjolander.sprinkles.annotations.ForeignKey;
import se.emilsjolander.sprinkles.annotations.Table;

import com.picdora.models.Image;

@Table(CollectionItem.TABLE_NAME)
public class CollectionItem extends Model {
	public static final String TABLE_NAME = "CollectionItems";
			
	/********** DB Fields ***********************/
	@AutoIncrementPrimaryKey
	@Column("id")
	protected long mId;

	@Column("imageId")
	protected long mImageId;

	@ForeignKey(Collection.TABLE_NAME + "(id)")
	@CascadeDelete
	@Column("collectionId")
	protected long mCollectionId;

	@Column("lastUsed")
	protected long mLastUsed;

	@Column("createdAt")
	protected long mCreatedAt;

	public CollectionItem() {
		// empty constructor for sprinkles
	}

	public CollectionItem(Collection collection, Image image) {
		mImageId = image.getId();
		mCollectionId = collection.getId();
	}

	@Override
	protected void beforeCreate() {
		mCreatedAt = System.currentTimeMillis();
		mLastUsed = System.currentTimeMillis();
	}

	@Override
	public boolean isValid() {
		if (mImageId == 0 || mCollectionId == 0) {
			return false;
		} else {
			return true;
		}
	}

	@Override
	public int hashCode() {
		/* If the image has been saved to the db then it will have a non zero id and will be unique. */
		if (mId != 0) {
			return (int) mId;
		} else {
			/* Otherwise base the hash on the collection and image. Code generated by eclipse. */
			final int prime = 31;
			int result = prime;
			result =  (int) (mCollectionId ^ (mCollectionId >>> 32));
			result = prime * result + (int) (mImageId ^ (mImageId >>> 32));
			return result;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null)
			return false;
		if (obj == this)
			return true;
		if (!(obj instanceof CollectionItem))
			return false;

		CollectionItem c = (CollectionItem) obj;

		/*
		 * If the id is not zero then it has been saved to the database and is
		 * guaranteed to have a unique id so we can just compare ids.
		 */
		if (c.mId == mId && mId != 0) {
			return true;
		}

		/*
		 * Otherwise base the equality on the collection and image ids
		 */
		else {
			return (c.mImageId == mImageId && c.mCollectionId == mCollectionId);
		}

	}

}
